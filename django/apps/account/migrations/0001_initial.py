# Generated by Django 5.1.1 on 2024-10-10 14:20

import account.models
import colorfield.fields
import common.validators
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('common', '0003_field_university_website'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(choices=[('bachelors', 'Bachelors'), ('masters', 'Masters'), ('phd', 'PhD'), ('associate', 'Associate'), ('diploma', 'Diploma'), ('certificate', 'Certificate')], max_length=50, verbose_name='Degree')),
                ('start', models.DateField(verbose_name='Start Date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('verified', 'Verified'), ('rejected', 'Rejected'), ('pending', 'Pending'), ('draft', 'Draft')], default='pending', max_length=50, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.field', verbose_name='Field')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.university', verbose_name='University')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
            },
        ),
        migrations.CreateModel(
            name='EducationVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('iee', 'International Education Evaluation'), ('communication', 'Communication'), ('self_verification', 'Self Verification')], max_length=50, verbose_name='Verification Method')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('education', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_account.education', verbose_name='Education')),
            ],
            options={
                'verbose_name': 'Education Verification',
                'verbose_name_plural': 'Education Verifications',
            },
        ),
        migrations.CreateModel(
            name='CommunicationMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('department', models.CharField(max_length=255, verbose_name='Department')),
                ('person', models.CharField(max_length=255, verbose_name='Person')),
                ('degree_file', models.FileField(upload_to=account.models.degree_file_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png']), common.validators.ValidateFileSize(max=5)], verbose_name='Degree File')),
                ('education_verification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth_account.educationverification', verbose_name='Education Verification')),
            ],
            options={
                'verbose_name': 'Communication Method',
                'verbose_name_plural': 'Communication Methods',
            },
        ),
        migrations.CreateModel(
            name='IEEMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ices_document', models.FileField(upload_to="", validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png']), common.validators.ValidateFileSize(max=5)], verbose_name='ICES Document')),
                ('citizen_document', models.FileField(upload_to="", validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png']), common.validators.ValidateFileSize(max=5)], verbose_name='Citizen Document')),
                ('evaluator', models.CharField(choices=[('wes', 'World Education Services'), ('iqas', 'International Qualifications Assessment Service'), ('icas', 'International Credential Assessment Service of Canada'), ('ces', 'Comparative Education Service')], max_length=50, verbose_name='Academic Credential Evaluator')),
                ('education_verification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth_account.educationverification', verbose_name='Education Verification')),
            ],
            options={
                'verbose_name': 'International Education Evaluation Method',
                'verbose_name_plural': 'International Education Evaluation Methods',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('skin_color', colorfield.fields.ColorField(blank=True, choices=[('#FFDFC4', 'Very Fair'), ('#F0D5B1', 'Fair'), ('#E5B897', 'Light'), ('#D9A377', 'Light Medium'), ('#C68642', 'Medium'), ('#A86B33', 'Olive'), ('#8D5524', 'Brown'), ('#603913', 'Dark Brown'), ('#3B260B', 'Very Dark'), ('#100C08', 'Deep')], default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Skin Color')),
                ('hair_color', colorfield.fields.ColorField(blank=True, default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Hair Color')),
                ('eye_color', colorfield.fields.ColorField(blank=True, choices=[('#FFBF00', 'Amber'), ('#5DADEC', 'Blue'), ('#6B4226', 'Brown'), ('#BEBEBE', 'Gray'), ('#1CAC78', 'Green'), ('#8E7618', 'Hazel'), ('#FF4500', 'Red'), ('#8F00FF', 'Violet')], default=None, image_field=None, max_length=25, null=True, samples=None, verbose_name='Eye Color')),
                ('full_body_image', models.ImageField(blank=True, null=True, upload_to=account.models.full_body_image_path, validators=[common.validators.ValidateFileSize(max=3)], verbose_name='Full Body Image')),
                ('job', models.ManyToManyField(blank=True, to='common.job', verbose_name='Job')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
